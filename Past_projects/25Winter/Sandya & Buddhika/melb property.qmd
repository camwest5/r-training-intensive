---
title: "Mel Property"
author: "Sandya & Buddhika"
format: html
editor: visual
date: 2025-07-17
---

## Melbourne Housing Snapshot

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
melb_data <- read.csv("../../data_sources/melb_data.csv")
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

```{r}
head(melb_data)
```

# Median House Price

```{r}
median(melb_data$Price [melb_data$YearBuilt >= 2000 & melb_data$YearBuilt <= 2018], na.rm = TRUE)
```

```{r}
library(dplyr)
```

# Descriptive Stats

```{r}

```

| mean_price | sd_price | min_price | max_price | mean_land | sd_landsize | min_landsize | max_landsize |
|----|----|----|----|----|----|----|----|
| 1075684 | 639310.7 | 85000 | 9e+06 | 558.4161 | 3990.669 | 0 | 433014 |

```{melb_data |>}
  summarise(
    mean_price = mean(Price, na.rm = TRUE),
    sd_price = sd(Price, na.rm = TRUE),
    min_price = min(Price, na.rm = TRUE),
    max_price = max(Price, na.rm = TRUE),
    
    mean_landsize = mean(Landsize, na.rm = TRUE),
    sd_landsize = sd(Landsize, na.rm = TRUE),
    min_landsize = min(Landsize, na.rm = TRUE),
    max_landsize = max(Landsize, na.rm = TRUE)
  )
```

# Price by number of rooms

```{r}
library(ggplot2)
```

```{r}
ggplot(melb_data, aes(x=factor(Rooms), y=Price)) +
  geom_boxplot() +
  labs(title="Price by Number of Rooms", x="Rooms", y="Price") +
  theme_minimal()
```

# Correlation matrix

```{r}
library(corrplot)
num_data <- melb_data %>% select_if(is.numeric)
cor_matrix <- cor(num_data, use="complete.obs")
```

```{r}
install.packages("corrplot")
library(corrplot)
corrplot(cor_matrix, method = "color")
```

This heatmap shows correlations between property features. Price is moderately correlated with the number of rooms, bathrooms, car spaces, and building area, indicating that larger, more feature-rich homes tend to be more expensive. Location variables (latitude/longitude) and distance from the city show weaker relationships.

# Build year and Prices

```{r}
library(ggplot2)
```

```{r}
ggplot(data = melb_data |> filter(YearBuilt > 1950, !is.na(YearBuilt), !is.na(Price)),
              mapping = aes(x = YearBuilt, y = Price)) +
              geom_line() + 
              geom_point(aes(colour = "pink")) +
  theme(legend.position="none")
```

```{r}
melb_data_small <- melb_data %>% filter(Landsize < 100, Price < 200000)
print(melb_data_small)
```

# Summary by property type

```{r}
melb_data %>%
  group_by(Type) %>%
  summarise(
    count = n(),
    mean_price = mean(Price, na.rm = TRUE),
    mean_landsize = mean(Landsize, na.rm = TRUE)
  )
```

# 

melb_data \|\> filter(Date \>= 2015, !is.na(Date), !is.na(Price)) \|\> ggplot(aes(x=Date, y=Price)) + geom_line(stat = "summary" , fun = mean, color = "blue") + geom_point(alpha = 0.3 , color = "darkred") + labs(title = "Housing Prices from 2015", x = "Date", Y = "Price (AUD)") + theme_minimal() \`\`\`

The `echo: false` option disables the printing of code (only output is displayed).
